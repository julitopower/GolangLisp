package main

import "fmt"

////////////////////////////////////////////////////////////////////////////////
// Literal
////////////////////////////////////////////////////////////////////////////////

type Int32Lit struct {
	Value int
}
type I32 = Int32Lit

func (_ Int32Lit) isAtom()  {}
func (_ Int32Lit) isSExpr() {}

type Float32Lit struct {
	Value float32
}
type F32 = Float32Lit

func (_ Float32Lit) isAtom()  {}
func (_ Float32Lit) isSExpr() {}

////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Symbol
////////////////////////////////////////////////////////////////////////////////
type Symbol struct {
	Name string
}
type S = Symbol

func NewSymbol(name string) Symbol {
	return Symbol{Name: name}
}

func (_ Symbol) isAtom()  {}
func (_ Symbol) isSExpr() {}

////////////////////////////////////////////////////////////////////////////////

type Atom interface {
	isAtom()
	isExpr()
}

type SExpr interface {
	isSExpr()
}

func main() {
	sexpr := []SExpr{S{"+"}, I32{5}, I32{3}}
	fmt.Println(sexpr)
}
